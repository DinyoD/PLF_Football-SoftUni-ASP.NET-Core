@model PLF_Football.Web.ViewModels.ApplicationUsers.UserAllTeamsViewModel

@using System.Security.Claims;

@{
    this.ViewData["ClubImg"] = @Model.FavoriteTeamName.ToLower();
    this.ViewData["Title"] = @Model.UserName +"'s "+ @Model.FavoriteTeamName + " Fantasy Teams";
    this.ViewData["CuurentUserId"] = this.User.FindFirst(ClaimTypes.NameIdentifier).Value;
}
<style>
    .bg-team::after {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        background-image: url('/image/Club/@(this.ViewData["ClubImg"]).png');
        width: 100%;
        height: 100%;
        background-position: center;
        background-size: 100%;
        opacity: 0.3;
        z-index: -1;
    }
    .btn-add{
        margin-right: 10px;
    }
</style>
<div class="bg-team">
    <br />
    <div class="d-flex justify-content-between">
        <span  style="font-weight:bolder; font-style:italic">@Model.UserName Total Points: @Model.TotalPoints</span>
        <h2>@this.ViewData["Title"]</h2>
    </div>
    <br />
    <hr />
    <div>
        <div class="col-md-12 text-center" style="font-weight:bolder">
            @foreach (var userGame in Model.Teams.Where(z=>z.Team.Count > 0 ).OrderByDescending(x => x.Matchday))
            {
            <div class="row align-items-center">

                <span class="col-md-2 alert-dark">Matchweek: @userGame.Matchday </span>
                @if (userGame.IsMatchdayStarted)
                {
                    <span class="col-md-2 alert-danger ">Status: Closed</span>
                }
                else
                {
                    <span class="col-md-2 alert-success ">Status: Open</span>
                }
                <span></span>
                <span class="col-md-4 alert-dark">Team: @userGame.Team.Count players -  Price: @userGame.TeamSumAsString </span>
                <span class="col-md-1 alert-dark">pts: @userGame.Points</span>
                <span class="row justify-content-end col-md-3">
                    @if (userGame.UserId == (string)this.ViewData["CuurentUserId"])
                    {
                        @if (!userGame.IsMatchdayStarted && userGame.Team.Count < 11)
                        {
                            <a class="btn btn-dark alert-success btn-add" style="font-weight:bolder" asp-controller="Players" asp-action="All">
                                Add Player
                            </a>
                        }
                        <a class="btn btn-dark alert-secondary" style="font-weight:bolder" asp-controller="Users" asp-action="Team"
                           asp-route-matchday="@userGame.Matchday">
                            Details
                        </a>
                    }
                </span>
            </div>
                <br />
                <div class="col-md-12 d-flex justify-content-between">
                    @foreach (var player in userGame.Team.OrderByDescending(x => x.Position.Id))
                    {
                     <a title="@player.LastName - @player.ClubName" asp-controller="Players" asp-action="Profile" asp-route-id="@player.Id">
                        <img style="height:100px" src="@player.ImageUrl" alt="Alternate Text" />

                        @if (player.PlayerPoints.Any(x => x.Matchday == userGame.Matchday))
                        {
                             <p>
                                 pts: @player.PlayerPoints.Where(x => x.Matchday == userGame.Matchday).Select(x => x.Points).FirstOrDefault()
                             </p>
                        }
                        else 
                        {
                             <p>
                                 pts: 0
                             </p>
                        }

                     </a>
                     }
                </div>
                <hr />
            }
        </div>
    </div>
</div>
